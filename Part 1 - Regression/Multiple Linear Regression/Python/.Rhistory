library(readr)
X50_Startups <- read_csv("~/Machine Learning_UdemyCourse/Machine Learning-A-Z-Codes-Datasets/Machine Learning A-Z (Codes and Datasets)/Part 2 - Regression/Section 5 - Multiple Linear Regression/Python/50_Startups.csv")
View(X50_Startups)
setwd("~/Machine Learning_UdemyCourse/Machine Learning-A-Z-Codes-Datasets/Machine Learning A-Z (Codes and Datasets)/Part 2 - Regression/Section 5 - Multiple Linear Regression/Python")
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
dataset = read.csv('50_Startups.csv')
dataset$State=factor(dataset$State,levels=c('New York','California','Florida'),
labels=c(1,2,3))
library(caTools)
set.seed(123)
split = sample.split(dataset$Profit, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(training_set)
regressor=lm(formula = Profit~ .,data=training_set)
summary(regressor)
y_pred=predict(regressor,newdata=test_set)
y_pred
regressor=lm(formula = Profit~ R.D.Spend + Administration + Marketing.Spend+State,data=dataset)
summary(regressor)
regressor=lm(formula = Profit~ R.D.Spend + Administration + Marketing.Spend,data=dataset)
summary(regressor)
regressor=lm(formula = Profit~ R.D.Spend  + Marketing.Spend+State,data=dataset)
summary(regressor)
regressor=lm(formula = Profit~ R.D.Spend  + Marketing.Spend,data=dataset)
summary(regressor)
regressor=lm(formula = Profit~ .,data=training_set)
summary(regressor)
backwardElimination <- function(x,s1){
numVars = length(x)
for(i in c(1:numbers)){
regressor = lm(formula=Profit ~ ., data=x)
maxVar  =max(coef(summary(regressor))[c(2:numVars),"Pr(>|t|)"])
if(maxVar > s1){
j=which(coef(summary(regressor))[c(2:numVars),"Pr(>|t|)"]==maxVar)
x=x[,-j]
}
numVars=numVars-1
}
return(summary(regressor))
}
SL = 0.05
dataset =  dataset[, c(1,2,3,4,5)]
backwardElimination(training_set,SL)
backwardElimination <- function(x,s1){
numVars = length(x)
for(i in c(1:numVars)){
regressor = lm(formula=Profit ~ ., data=x)
maxVar  =max(coef(summary(regressor))[c(2:numVars),"Pr(>|t|)"])
if(maxVar > s1){
j=which(coef(summary(regressor))[c(2:numVars),"Pr(>|t|)"]==maxVar)
x=x[,-j]
}
numVars=numVars-1
}
return(summary(regressor))
}
SL = 0.05
dataset =  dataset[, c(1,2,3,4,5)]
backwardElimination(training_set,SL)
